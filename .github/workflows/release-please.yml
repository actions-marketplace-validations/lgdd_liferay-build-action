name: release-please
run-name: Release Please

on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write

jobs:
  release-please:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-go@v4
        with:
          go-version: '>=1.20.0'
      - name: Build Binary
        run: |
          go build -o bin/go-build.new
      - name: Build & Verify Checksum
        id: build-verify-checksum
        run: |
          md5sum bin/go-build.new | cut -c -32 > bin/go-build.new.md5
          checksum=$(cat bin/go-build.md5)
          newChecksum=$(cat bin/go-build.new.md5)
          echo $checkSum
          echo $newChecksum
          if [[ "$newChecksum" = "$checkSum" ]]; then
            echo "need_push=false" >> "$GITHUB_OUTPUT"
            rm bin/go-build.new
            rm bin/go-build.new.md5
          else
            echo "need_push=true" >> "$GITHUB_OUTPUT"
            rm bin/go-build
            rm bin/go-build.md5
            mv bin/go-build.new bin/go-build
            mv bin/go-build.new.md5 bin/go-build.md5
          fi;
      - name: Push Binary
        if: ${{ steps.build-verify-checksum.outputs.need_push == 'true' }}
        run: |
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com
          git remote add gh-token "https://${{ secrets.GITHUB_TOKEN }}@github.com/lgdd/liferay-build-action.git"
          git add bin/go-build
          git add bin/go-build.md5
          git update-index --chmod=+x bin/go-build
          git commit -am "chore: update go binary" || echo "Binary doesn't need to be updated."
          git push
      - uses: google-github-actions/release-please-action@v3
        with:
          release-type: simple
      - name: tag major and minor versions
        if: ${{ steps.release.outputs.release_created }}
        run: |
          git tag -d v${{ steps.release.outputs.major }} || true
          git tag -d v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }} || true
          git push origin :v${{ steps.release.outputs.major }} || true
          git push origin :v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }} || true
          git tag -a v${{ steps.release.outputs.major }} -m "v${{ steps.release.outputs.major }}"
          git tag -a v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }} -m "v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }}"
          git push origin v${{ steps.release.outputs.major }}
          git push origin v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }}
